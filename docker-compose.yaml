services:
  t-generator:
    image: t-generator
    container_name: t-generator
    build:
      context: tgenerator/
    ports:
      - "8081:8080"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    ports:
      - "2181:2181"

  kafka1:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://host.docker.internal:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:7.6.1
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://host.docker.internal:9094
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper

  init-topic-1:
    image: confluentinc/cp-kafka:7.6.1
    command: >
        bash -c "
        echo 'Waiting for Kafka to be ready...';
        cub kafka-ready -b kafka1:9092,kafka2:9094 1 60 &&
        kafka-topics --create --if-not-exists --bootstrap-server kafka1:9092,kafka2:9094 --topic transaction.messages --partitions 4 --replication-factor 2 --config retention.ms=604800000
        "
    depends_on:
      - kafka1
      - kafka2

  init-topic-2:
    image: confluentinc/cp-kafka:7.6.1
    command: >
      bash -c "
      echo 'Waiting for Kafka to be ready...';
      cub kafka-ready -b kafka1:9092,kafka2:9094 1 60 &&
      kafka-topics --create --if-not-exists --bootstrap-server kafka1:9092,kafka2:9094 --topic fraud.transactions --partitions 4 --replication-factor 2 --config retention.ms=604800000
      "
    depends_on:
      - kafka1
      - kafka2

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "7777:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka1
      - kafka2
      - init-topic-1
      - init-topic-2

  postgres:
    image: postgres:15.1-alpine
    ports:
      - "5432:5432"
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transactiondb
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - transactiondb_data:/var/lib/postgresql/data

  t-producer:
    image: t-producer
    container_name: t-producer
    build:
      context: tproducer/
    ports:
      - "8082:8080"
    environment:
      DATABASE_HOST: host.docker.internal
      KAFKA_BOOTSTRAP_SERVER: host.docker.internal:9092,host.docker.internal:9094
      GENERATOR_URL: ws://host.docker.internal:8081/transactions
    depends_on:
      - t-generator
      - kafka1
      - kafka2
      - postgres
      - init-topic-1

  fraud-detection-api:
    build: ./frauddetection
    container_name: fraud-detection-api
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=True
    volumes:
      - ./frauddetection:/frauddetection
    ports:
      - "5001:5001"
    command: python main.py

  t-connector:
    image: t-connector
    container_name: t-connector
    build:
      context: tconnector/
    ports:
      - "8083:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVER: host.docker.internal:9092,host.docker.internal:9094
      FRAUD_DETECTION_API_URL: http://host.docker.internal:5001
    depends_on:
      - kafka1
      - kafka2
      - init-topic-1
      - init-topic-2

volumes:
  transactiondb_data:
